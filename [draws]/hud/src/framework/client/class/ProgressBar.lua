local super = Class("ProgressBar", Component).getSuperclass()ProgressBar.HORIZONTAL = 0ProgressBar.VERTICAL   = 1function ProgressBar:init(orient, min, max)	super.init(self)	self:setForeground(tocolor(50,50,50,50))	self:setBackground(tocolor(0,0,0,50))	self:setOrientation(orient)	self.value = min	self:setMinimum(min)	self:setMaximum(max)	return selfendfunction ProgressBar:paint(g)	local x, y = self:getLocationOnScreen()	local w = self:getWidth()	local h = self:getHeight()	g:drawSetColor( self:getBackground() );	g:drawFilledRect(x,   y,   w, 1);	g:drawFilledRect(x+w, y,   1, h);	g:drawFilledRect(x,   y,   1, h);	g:drawFilledRect(x,   y+h, w, 1);	local color = self:getForeground()	if(self:isFocusOwner()) then		color = tocolor(31, 40, 150, 223)	end	g:drawSetColor(tocolor(255, 255, 255, 200))	g:drawFilledRect(x + 1, y + 1, w - 1, h - 1)	g:drawSetColor(color)	g:drawFilledRect(x + 1, y + 1, self:getPercentComplete() * w - 1, h - 1)endfunction ProgressBar:setOrientation(newOrientation)	if (self.orientation ~= newOrientation) then		if (newOrientation == ProgressBar.VERTICAL) or (newOrientation == ProgressBar.HORIZONTAL) then			self.oldOrientation = self.orientation			self.orientation = newOrientation		else			outputDebugString("" .. newOrientation .. " is not a legal orientation")		end	endendfunction ProgressBar:getPercentComplete()	local span = self:getMaximum() - self:getMinimum()	local currentValue = self:getValue()	local pc = (currentValue - self:getMinimum()) / span;	return pcendfunction ProgressBar:addChangeListener(l)	self.changeListener = lendfunction ProgressBar:removeChangeListener(l)	self.changeListener = nilendfunction ProgressBar:getValue()	return self.valueendfunction ProgressBar:getMinimum()	return self.minimumendfunction ProgressBar:getMaximum()	return self.maximumendfunction ProgressBar:setValue(n)	self.value = nendfunction ProgressBar:setMinimum(n)	self.minimum = nendfunction ProgressBar:setMaximum(n)	self.maximum = nend
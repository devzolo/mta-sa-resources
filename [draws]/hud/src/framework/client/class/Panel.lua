local super = Class("Panel", Container, function()	static.DEFAULT_STYLE_CLASS = "panel"end).getSuperclass()function Panel:init()	super.init(self)	return selfendfunction Panel:paintComponent(g)	local x, y = self:getLocationOnScreen()	local w = self.width	local h = self.height			g:drawSetColor(self:getBackground())	g:drawFilledRect(x, y, w, h)		super.paintComponent(self, g)endfunction Panel:mouseEntered(e)	self.rollover = true	self:repaint()endfunction Panel:mouseExited(e)	self.rollover = false	self:repaint()endfunction Panel:isRollover()	return self.rolloverendfunction Panel:setEnabled(enabled)	super.setEnabled(self, enabled)	self:repaint()endfunction Panel:updateUI()	local stylesheet = self:getStylesheet()	if(stylesheet) then		local style = stylesheet and stylesheet.style		if(style) then					local styleState = ""						if(not self:isEnabled()) then				styleState = ":disabled"			elseif(self:isRollover()) then				styleState = ":hover"						elseif(self:isFocusOwner()) then				styleState = ":focus"						end						local idStyle = style["#" .. self:getId() .. styleState]			local typeStyle = style[Panel.DEFAULT_STYLE_CLASS .. styleState]			local classStyle = self:getStyleClass() and style["." .. self:getStyleClass() .. styleState]						local backgroundColor = (idStyle and idStyle._style["background-color"]) 								 or (classStyle and classStyle._style["background-color"])								 or (typeStyle and typeStyle._style["background-color"])			if(backgroundColor) then				self:setBackground(backgroundColor)			end								local color = (idStyle and idStyle._style["color"]) 					   or (classStyle and classStyle._style["color"])					   or (typeStyle and typeStyle._style["color"])					   			if(color) then				self:setForeground(color)			end		end	endend